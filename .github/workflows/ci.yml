name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10"]  # your tested versions
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('**/requirements*.txt', '**/pyproject.toml', '**/setup.cfg', '**/setup.py') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
          # Try to install your package (if you have pyproject.toml or setup.py)
          if [ -f pyproject.toml ] || [ -f setup.py ]; then pip install -e .; fi

      - name: Use non-GUI backend for matplotlib
        run: echo "MPLBACKEND=Agg" >> $GITHUB_ENV

      - name: Run tests
        run: pytest --cov=neurocluster --cov-report=term-missing

      # Upload any images/logs the tests produce
      - name: Upload test artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-outputs-py${{ matrix.python-version }}
          path: |
            tests/test_outputs
          if-no-files-found: ignore
